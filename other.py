from aiogram.fsm.context import FSMContext
from aiogram import Dispatcher, types
from config_reader import config
from create_bot import bot
import keyboards as kb


async def is_admin(update: types.Update | types.Message | types.CallbackQuery) -> bool | None:
    '''–ü—Ä–∏–Ω–∏–º–∞–µ—Ç –∞–ø–¥–µ–π—Ç, –µ—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∞–¥–º–∏–Ω–∞—Ö –≥—Ä—É–ø–ø—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –∏–Ω–∞—á–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ'''
    admins = [item.user.id for item in await bot.get_chat_administrators(config.chat_id)]
    if update.from_user.id in admins:
        return True
    await bot.send_message(update.from_user.id, '<b>üö´ –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.</b>\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.',
                           reply_markup=kb.main_buttons_kb)


async def is_admin_silent(userid: int) -> bool:
    '''–ü—Ä–∏–Ω–∏–º–∞–µ—Ç id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∞–¥–º–∏–Ω–∞—Ö –≥—Ä—É–ø–ø—ã'''
    admins = [item.user.id for item in await bot.get_chat_administrators(config.chat_id)]
    return userid in admins


async def hide_message(update: types.Update) -> None:
    '''–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —Å–∫—Ä—ã—Ç—å/—É–¥–∞–ª–∏—Ç—å –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö'''
    try:
        await update.message.delete()
    except Exception as e:
        print(e) # !!!
        await update.answer('–ë–æ—Ç –Ω–µ –º–æ–∂–µ—Ç —Å–∫—Ä—ã—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ –µ–º—É –±–æ–ª–µ–µ 48 —á–∞—Å–æ–≤, –Ω–æ –≤—ã –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –µ–≥–æ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ.',
                            reply_markup=kb.main_buttons_kb)


async def cancel_edit(call: types.CallbackQuery, state: FSMContext):
    '''–§—É–Ω–∫—Ü–∏—è(—Ö—ç–Ω–¥–ª–µ—Ä) –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π'''
    try:
        await call.message.delete()
    finally:
        await state.clear()
        await call.message.answer('<b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.</b>\n–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.', reply_markup=kb.main_buttons_kb)
        await call.answer()


async def in_dev(call: types.CallbackQuery):
    "–§—É–Ω–∫—Ü–∏—è(—Ö–µ–Ω–¥–ª–µ—Ä)-–∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö —Ä–∞–∑–¥–µ–ª–æ–≤"
    await call.answer(text='–†–∞–∑–¥–µ–ª –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω', show_alert=True)


def register_handlers(dp: Dispatcher):
    dp.callback_query.register(hide_message, lambda call: call.data == 'hide')
    dp.callback_query.register(in_dev, lambda call: call.data == 'in_dev')
    dp.callback_query.register(cancel_edit, lambda call: call.data == 'cancelFSM')


